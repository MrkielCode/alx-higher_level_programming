# 0-add_integer.txt

-----------------------------
doctest for 0-add_integer.txt
-----------------------------

The modules contains a prototypes add_integer(a, b=98) to
add two numbers.

-----
Usage
-----

>>> add_integer = __import__('0-add_integer').add_integer

    >>> add_integer(10, 20)
    30
    >>> add_integer(12, 42) 
    54

To check for float number in parameters

::
    
    >>> add_integer (2.0, 7.0)
    9
    >>> add_integer (3, 7.2) 
    10
    >>> add_integer (7.0, 3) 
    10

To check for one parameters

:: 

    >>> add_integer(2)
    100
    >>> add_integer(2.2)
    100

To check for negative values

::

    >>> add_integer(-5, -3)
    -8
    >>> add_integer(-5.2, 2)
    -3
    >>> add_integer(-2, 5.2)
    3


To check Exceptions Errors

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer('a', 2)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, 'b')
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer('a')
    Traceback (most recent call last):
    TypeError: a must be an integer

To check Overflow Errors

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(-float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'
