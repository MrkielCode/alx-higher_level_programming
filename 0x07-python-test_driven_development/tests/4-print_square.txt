# 4-print_square.txt

This modules accepts a number as an
argument an print "#" according respectively

import the modules from 4-print_square
--------------------------------------

>>> print_square = __import__('4-print_square').print_square

Testing for accurate number of print

    >>> print_square(5)
    #####
    #####
    #####
    #####
    #####

Testing for invalid arguments
-----------------------------

Testing if string was passed to the parameter
---------------------------------------------

    >>> print_square("string")
    Traceback (most recent call last):
    TypeError: size must be an integer

Testing if negative float was passed 
--------------------------------------

    >>> print_square(-6.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

Testing if negative integer was passed
--------------------------------------

    >>> print_square(-5)
    Traceback (most recent call last):
    TypeError: size must be >= 0

Testing if number is float
------------------------------

    >>> print_square(2.2)
    Traceback (most recent call last):
    TypeError: size must be an integer

Testing if parameter is none
--------------------------------

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

Testing if no parameter was passed
--------------------------------------
    >>> print_square()
    Traceback (most recent call last): 
    TypeError: print_square() missing 1 required positional argument: 'size'
